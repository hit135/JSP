<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Spring의 sqlFactoryBean >> jsp의 sqlFactoryBuilder을 대신함 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <beans:property name="mapperLocations" value="classpath*:sample/config/mappers/**/*.xml" /> -->
		<property name="mapperLocations" value="classpath:/mybatis/mapper/*.xml"/>
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"/>
		<!-- 밑의 주석은 여러 db를 쓸 때 사용 -->
		<!-- <beans:property name="databaseIdProvider" ref="databaseIdProvider" /> -->
	</bean>

	<!-- sqlSessionFactory를 생성자 매개변수로 사용하여 sqlSession을 얻기 -->
<!-- 	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>  -->

	<!-- @Mapper을 사용하기 위해 mybatis-spring 등록 -->
	<mybatis-spring:scan base-package="kr.or.youth" annotation="org.apache.ibatis.annotations.Mapper"/>
		
		
</beans>
